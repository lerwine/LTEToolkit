<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Add members to support INotifyPropertyChanged.</Title>
      <Shortcut>propertychanged</Shortcut>
      <Description>Code snippet to add members to support the System.ComponentModel.INotifyPropertyChanged interface.</Description>
      <Author>Leonard T. Erwine</Author>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>System.ComponentModel</Namespace>
        </Import>
      </Imports>
      <Code Language="csharp">
<![CDATA[
#region INotifyPropertyChanged Members

/// <summary>
/// Occurs when a property value changes.
/// </summary>
public event PropertyChangedEventHandler PropertyChanged;

/// <summary>
/// Raises the <see cref="PropertyChanged" /> event.
/// </summary>
/// <param name="args">Name of the property that has changed.</param>
protected void RaisePropertyChanged(string propertyName)
{
    PropertyChangedEventArgs args = new PropertyChangedEventArgs(propertyName);
    try { OnPropertyChanged(args); }
    finally { PropertyChanged?.Invoke(this, args); }
}

/// <summary>
/// This gets called when a property value changes.
/// </summary>
/// <param name="args">Argument that describes the property that has changed.</param>
protected virtual void OnPropertyChanged(PropertyChangedEventArgs args) { }

#endregion
$end$]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>
